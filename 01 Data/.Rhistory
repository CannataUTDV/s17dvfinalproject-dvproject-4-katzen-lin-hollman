#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
differencewt<- ourdata$weight-ourdata$repwt
differenceht<- ourdata$height-ourdata$repht
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=(weight-repwt), y=(height-repht)) +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
differencewt<- ourdata$weight-ourdata$repwt
differenceht<- ourdata$height-ourdata$repht
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=differencewt, y=(=differenceht)) +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
plot(phollman)
differencewt<- ourdata$weight-ourdata$repwt
differenceht<- ourdata$height-ourdata$repht
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=differencewt, y=(=differenceht), color="grey") +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
plot(phollman)
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=differencewt, y=(=differenceht), color="grey") +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=differencewt, y=(=differenceht), color="grey") +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=(=repwt), color="grey") +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=(=repwt), color="grey") +
facet_grid(,~sex) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=(=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
library("grid")
# You may need to use getwd() to find out where the "khlpplots.png" file will be put.
# You can use setwd() to set the current working directory.
png("khlpplots.png", width = 25, height = 20, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
# Print Plots
print(pkatzen, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(phollman, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(plin, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(ppark, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
dev.off()
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=(=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=(=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=(=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
plot(phollman)
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values, separated by gender")
plot(phollman)
pwd()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/wip proj2.R')
ourdata = read.csv("01 Data/Davis.csv", header = TRUE)
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);summary (ourdata)
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/DataVisualization/CannataUTDV:dvproject-2-katzen-hollman-park-lin/01 Data/getdaviscsv.R')
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);head (ourdata)
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T); head(ourdata)
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/DataVisualization/CannataUTDV:dvproject-2-katzen-hollman-park-lin/graphhollman.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/DataVisualization/CannataUTDV:dvproject-2-katzen-hollman-park-lin/graphhollman.R')
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(.~sex) +
xlim(40,160) +
ylim(40,160)
labs(title="Differences in Reported vs. Actual Values, separated by gender")
a=c(1,2,3,4,5); x=a; y=a*2; z=a^3; df = data.frame(a,x,y,z)
plot = tidyr::gather(df, variable, value, -a) %>% ggplot() +
geom_point(aes(x=a, y=value, colour = variable)) +
geom_line(aes(x=a, y=value, colour = variable))
print(plot)
print (df)
b=c(1,2,3,4,5); x=b; y=b*2; z=b^3; df = data.frame(b,x,y,z)
plot = tidyr::gather(df, variable, value, -b) %>% ggplot() +
geom_point(aes(x=b, y=value, colour = variable)) +
geom_line(aes(x=b, y=value, colour = variable))
print(plot)
b=c(1,2,3,4,5); x=b; y=b*2; z=b^3; df2 = data.frame(a,x,y,z)
plot2 = tidyr::gather(df2, variable, value, -b)
print (plot2)
b=c(1,2,3,4,5); x=b; y=b*2; z=b^3; df2 = data.frame(b,x,y,z)
plot2 = tidyr::gather(df2, variable, value, -b)
print (plot2)
# df <- read.csv("/Users/pcannata/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
'
I loaded my REST server onto my Mac so I could run it exclusively during class.
To do this:
Download my REST server and unzip it
cd to the unzipped folder
cd CarnotDist/CarnotRE
../dist/bin/jython -J-Xmx1g restful_start.py
then use localhost:5011 below
'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'localhost:5011/rest/native/?query="select * from SuperStoreOrders"')),httpheader=c(DB='jdbc:data:world:sql:cannata:superstoreorders', USER='cannata', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
summary(df)
head(df)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_histogram(aes(x=Shipping_Cost)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
lapply('alphabet begins with \\\ abc', gsub, pattern="[ae\\]",replacement= "")
load("/Users/kimberlyhollman/Downloads/NSDUH-2015-DS0001-bndl-data-r/NSDUH-2015-DS0001-data/NSDUH-2015-DS0001-data-r.rda")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/due/s17dvfinalproject-dvproject-4-katzen-lin-hollman./01 Data")
require(readr)
require(plyr)
require(dplyr)
# [CALL CSV]
file_path = "../01 Data/INC.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
# [FILTER OUT DEL]
df <- df %>% plyr::rename(df, c("SummaryLevel" = "DEL" )) %>% dplyr::select(df, -DEL)
df <- df %>% plyr::rename(df, c("StateFIPS" = "DEL" )) %>% dplyr::select(df, -DEL)
df <- df %>% plyr::rename(df, c("GEOID" = "DEL" )) %>% dplyr::select(df, -DEL)
df <- df %>% plyr::rename(df, c("State" = "DEL" )) %>% dplyr::select(df, -DEL)
# [RENAME TO PRESERVE COLUMN]
df <- plyr::rename(PREincomedf, c("AreaName" = "State" ))
# [SELECT COLUMNS]
# [HEAD COUNT OF HOUSEHOLD INCOME BRACKETS]
dfA <- plyr::rename(df, c("State" = "B19001" ))
dfA <- dplyr::select(dfA, B19001:B19001_017)
dfA <- plyr::rename(dfA, c("B19001" = "State" ))
# [MEDIAN HOUSEHOLD INCOME BY RACE]
dfB <- plyr::rename(df, c("State" = "B19013" ))
dfB <- dplyr::select(dfB, starts_with("B19013"))
dfB <- dplyr::select(dfB, B19013:B19013I_001)
dfB <- plyr::rename(dfB, c("B19013" = "State" ))
# [MEDIAN HOUSEHOLD INCOME BY AGE]
dfC <- plyr::rename(df, c("State" = "B19049" ))
dfC <- dplyr::select(dfB, starts_with("B19049"))
dfC <- dplyr::select(dfB, B19049:B19049_005)
dfC <- plyr::rename(dfB, c("B19049" = "State" ))
# JOIN
df1 <- dplyr::left_join(dfA, dfB, by="ZIP")
df2 <- dplyr::left_join(df1, dfC, by="State")
# create a new .csv file
write.csv(df3, gsub("PRE", "POST", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
# [CALL CSV]
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
# [FILTER OUT DEL]
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL)
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(df, c("StateFIPS" = "DEL" )) %>% dplyr::select(df, -DEL)
require(readr)
require(plyr)
require(dplyr)
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
df <- plyr::rename(PREincomedf, c("AreaName" = "State" ))
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
df <- plyr::rename(df, c("AreaName" = "State" ))
dfA <- plyr::rename(df, c("State" = "B19001" ))
dfA <- dplyr::select(dfA, B19001:B19001_017)
dfA <- plyr::rename(dfA, c("B19001" = "State" ))
dfA <- df %>% plyr::rename(c("State" = "B19001" )) %>%dplyr::select(B19001:B19001_017)%>% plyr::rename(c("B19001" = "State" ))
dfB <- plyr::rename(df, c("State" = "B19013" ))
dfB <- dplyr::select(dfB, starts_with("B19013"))
dfB <- dplyr::select(dfB, B19013:B19013I_001)
dfB <- plyr::rename(dfB, c("B19013" = "State" ))
dfC <- plyr::rename(df, c("State" = "B19049" ))
dfC <- dplyr::select(dfB, starts_with("B19049"))
dfC <- dplyr::select(dfB, B19049:B19049_005)
dfC <- plyr::rename(dfB, c("B19049" = "State" ))
df1 <- dplyr::left_join(dfA, dfB, by="ZIP")
df2 <- dplyr::left_join(df1, dfC, by="State")
write.csv(df2, gsub("PRE", "POST", file_path), row.names=FALSE, na = "")
dfB <- plyr::rename(df, c("State" = "B19013" ))
dfB <- dplyr::select(dfB, starts_with("B19013"))
dfB <- dplyr::select(dfB, B19013:B19013I_001)
dfB <- plyr::rename(dfB, c("B19013" = "State" ))
dfC <- plyr::rename(df, c("State" = "B19049" ))
dfC <- dplyr::select(dfB, starts_with("B19049"))
dfC <- dplyr::select(dfB, B19049:B19049_005)
dfC <- plyr::rename(df, c("State" = "B19049" ))
dfC <- plyr::rename(df, c("State" = "B19049" ))
dfC <- dplyr::select(dfC, starts_with("B19049"))
dfC <- dplyr::select(dfC, B19049:B19049_005)
dfC <- plyr::rename(dfC, c("B19049" = "State" ))
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
write.csv(df2, gsub("PRE", "POST", file_path), row.names=FALSE, na = "")
write.csv(df2, gsub("pre", "post", file_path), row.names=FALSE, na = "")
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
sample(INCpre, size=15)
source("../01 Data/INCgetpre.R")
head(INCpre, size=15)
source("../01 Data/INCetl.r", echo=TRUE)
require(readr)
require(plyr)
require(dplyr)
# [CALL CSV]
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
# [FILTER OUT DEL]
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
# [RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
# [SELECT COLUMNS]
# [HEAD COUNT OF HOUSEHOLD INCOME BRACKETS]
dfA <- df %>% plyr::rename(c("State" = "B19001" )) %>%dplyr::select(B19001:B19001_017)%>% plyr::rename(c("B19001" = "State" ))
# [MEDIAN HOUSEHOLD INCOME BY RACE]
dfB <- plyr::rename(df, c("State" = "B19013" ))
dfB <- dplyr::select(dfB, starts_with("B19013"))
dfB <- dplyr::select(dfB, B19013:B19013I_001)
dfB <- plyr::rename(dfB, c("B19013" = "State" ))
# [MEDIAN HOUSEHOLD INCOME BY AGE]
dfC <- plyr::rename(df, c("State" = "B19049" ))
dfC <- dplyr::select(dfC, starts_with("B19049"))
dfC <- dplyr::select(dfC, B19049:B19049_005)
dfC <- plyr::rename(dfC, c("B19049" = "State" ))
# JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
# create a new .csv file
write.csv(df2, gsub("pre", "post", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT DEL]
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[HEAD COUNT OF HOUSEHOLD INCOME BRACKETS]
dfA <- df %>% plyr::rename(c("State" = "B19001" )) %>%dplyr::select(B19001:B19001_017)%>% plyr::rename(c("B19001" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY RACE]
dfB <- plyr::rename(df, c("State" = "B19013" )) %>% dplyr::select(starts_with("B19013")) %>% dplyr::select(B19013:B19013I_001) %>% plyr::rename(c("B19013" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY AGE]
dfC <- plyr::rename(df, c("State" = "B19049" )) %>% dplyr::select(starts_with("B19049")) %>% dplyr::select(B19049:B19049_005) %>% plyr::rename(c("B19049" = "State" ))
#JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
# create a new .csv file
write.csv(df2, gsub("pre", "post", file_path), row.names=FALSE, na = "")
source("../01 Data/INCetl.r", echo=TRUE)
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT DEL]
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[HEAD COUNT OF HOUSEHOLD INCOME BRACKETS]
dfA <- df %>% plyr::rename(c("State" = "B19001" )) %>%dplyr::select(B19001:B19001_017)%>% plyr::rename(c("B19001" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY RACE]
dfB <- plyr::rename(df, c("State" = "B19013" )) %>% dplyr::select(starts_with("B19013")) %>% dplyr::select(B19013:B19013I_001) %>% plyr::rename(c("B19013" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY AGE]
dfC <- plyr::rename(df, c("State" = "B19049" )) %>% dplyr::select(starts_with("B19049")) %>% dplyr::select(B19049:B19049_005) %>% plyr::rename(c("B19049" = "State" ))
#JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
# create a new .csv file
write.csv(df2, gsub("pre", "post", file_path), row.names=FALSE, na = "")
source("../01 Data/INCgetpost.R")
head(INCpost, size=15)
