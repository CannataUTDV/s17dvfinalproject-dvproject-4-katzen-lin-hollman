options(max.print = 40)
library(knitr)
source("../01 Data/INCgetpre.R")
kable(INCpre, digits = 0)
source("../01 Data/INCetl.r", echo=TRUE, print.eval=FALSE, verbose=FALSE, keep.source=TRUE)
library(knitr)
source("../01 Data/INCgetpost.R")
kable(INCpost, digits = 0)
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[HEAD COUNT OF HOUSEHOLD INCOME BRACKETS] (if you want it)
#dfA <- df %>% plyr::rename(c("State" = "B19001" )) %>%dplyr::select(B19001:B19001_017)%>% plyr::rename(c("B19001" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY RACE]
dfB <- plyr::rename(df, c("State" = "B19013" )) %>% dplyr::select(starts_with("B19013")) %>% dplyr::select(B19013:B19013F_001) %>% plyr::rename(c("B19013" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY AGE]
dfC <- plyr::rename(df, c("State" = "B19049" )) %>% dplyr::select(starts_with("B19049")) %>% dplyr::select(B19049:B19049_005) %>% plyr::rename(c("B19049" = "State" ))
#JOIN (if you want it)
df1 <- dplyr::left_join(dfB, dfC, by="State")
#df2 <- dplyr::left_join(df1, dfC, by="State")
# if you want it
#dfZ <- dplyr::rename(df2, inc.counttotal = B19001_001, inc.lessthan10k = B19001_002	, inc.10to15k = B19001_003	, inc.15to20k = B19001_004	, inc.20to25k = B19001_005	, inc.25to30k = B19001_006	, inc.30to35k = B19001_007	, inc.35to40k = B19001_008	, inc.40to45k = B19001_009	, inc.45to50k = B19001_010	, inc.50to60k = B19001_011	, inc.60to75k = B19001_012	, inc.75to100k = B19001_013	, inc.100kto125k = B19001_014	, inc.125to150k = B19001_015	, inc.150to200k = B19001_016, inc.200kmore = B19001_017)
dfZ <- dplyr::rename(df1,med.inc.total = B19013_001	, med.inc.white = B19013A_001, med.inc.black = B19013B_001	, med.inc.americanindian = B19013C_001, med.inc.asian = B19013D_001	, med.inc.pacificislander = B19013E_001, med.inc.other = B19013F_001, med.inc.age.total = B19049_001, med.inc.age.under25 = B19049_002, med.inc.age.25to44 = B19049_003, med.inc.age.45to64 = B19049_004, med.inc.age.65over = B19049_005)
# create a new .csv file
write.csv(dfZ, gsub("pre", "post", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/INCpre.csv"
PREincomedf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREincomedf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[HEAD COUNT OF HOUSEHOLD INCOME BRACKETS] (if you want it)
#dfA <- df %>% plyr::rename(c("State" = "B19001" )) %>%dplyr::select(B19001:B19001_017)%>% plyr::rename(c("B19001" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY RACE]
dfB <- plyr::rename(df, c("State" = "B19013" )) %>% dplyr::select(starts_with("B19013")) %>% dplyr::select(B19013:B19013F_001) %>% plyr::rename(c("B19013" = "State" ))
#[MEDIAN HOUSEHOLD INCOME BY AGE]
dfC <- plyr::rename(df, c("State" = "B19049" )) %>% dplyr::select(starts_with("B19049")) %>% dplyr::select(B19049:B19049_005) %>% plyr::rename(c("B19049" = "State" ))
#JOIN (if you want it)
df1 <- dplyr::left_join(dfB, dfC, by="State")
#df2 <- dplyr::left_join(df1, dfC, by="State")
# if you want it
#dfZ <- dplyr::rename(df2, inc.counttotal = B19001_001, inc.lessthan10k = B19001_002	, inc.10to15k = B19001_003	, inc.15to20k = B19001_004	, inc.20to25k = B19001_005	, inc.25to30k = B19001_006	, inc.30to35k = B19001_007	, inc.35to40k = B19001_008	, inc.40to45k = B19001_009	, inc.45to50k = B19001_010	, inc.50to60k = B19001_011	, inc.60to75k = B19001_012	, inc.75to100k = B19001_013	, inc.100kto125k = B19001_014	, inc.125to150k = B19001_015	, inc.150to200k = B19001_016, inc.200kmore = B19001_017)
dfZ <- dplyr::rename(df1,med.inc.total = B19013_001	, med.inc.white = B19013A_001, med.inc.black = B19013B_001	, med.inc.americanindian = B19013C_001, med.inc.asian = B19013D_001	, med.inc.pacificislander = B19013E_001, med.inc.other = B19013F_001, med.inc.age.total = B19049_001, med.inc.age.under25 = B19049_002, med.inc.age.25to44 = B19049_003, med.inc.age.45to64 = B19049_004, med.inc.age.65over = B19049_005)
# create a new .csv file
write.csv(dfZ, gsub("pre", "post", file_path), row.names=FALSE, na = "")
library(knitr)
source("../01 Data/INCgetpost.R")
kable(INCpost, digits = 0)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
library(knitr)
source("../01 Data/INCgetpre.R")
kable(INCpre, digits = 0)
source("../01 Data/INCetl.r", echo=TRUE, print.eval=FALSE, verbose=FALSE, keep.source=TRUE)
library(knitr)
source("../01 Data/INCgetpost.R")
kable(INCpost, digits = 0)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
library(knitr)
source("../01 Data/INCgetpre.R")
kable(INCpre, digits = 0)
source("../01 Data/INCetl.r", echo=TRUE, print.eval=FALSE, verbose=FALSE, keep.source=TRUE)
library(knitr)
source("../01 Data/INCgetpost.R")
kable(INCpost, digits = 0)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
library(knitr)
source("../01 Data/INCgetpre.R")
kable(INCpre, digits = 0)
source("../01 Data/INCetl.r", echo=TRUE, print.eval=FALSE, verbose=FALSE, keep.source=TRUE)
library(knitr)
source("../01 Data/INCgetpost.R")
kable(INCpost, digits = 0)
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/EDUpre.csv"
PREdf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREdf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[EDUCATIONAL ATTAINMENT BY AGE, SEX, AND RACE]
dfA <- plyr::rename(df, c("State" = "C15002" )) %>% dplyr::select(starts_with("C15002")) %>% dplyr::select(C15002:C15002E_011) %>% plyr::rename(c("C15002" = "State" ))
#[FIELDS OF BACHELORS] if you want it
#dfB <- plyr::rename(df, c("State" = "B1501" )) %>% dplyr::select(starts_with("B1501")) %>% dplyr::select(B1501:B15012_010) %>% plyr::rename(c("B1501" = "State" ))
#JOIN
#df1 <- dplyr::left_join(dfA, dfB, by="State")
dfA <- dplyr::rename(dfA,
edu.white = C15002A_001,
edu.white.male = C15002A_002,
edu.white.male.lessGED = C15002A_003,
edu.white.male.GED = C15002A_004,
edu.white.male.somecollege = C15002A_005,
edu.white.male.bachelors = C15002A_006,
edu.white.female = C15002A_007,
edu.white.female.lessGED = C15002A_008,
edu.white.female.GED = C15002A_009,
edu.white.female.somecollege = C15002A_010,
edu.white.female.bachelors = C15002A_011,
edu.black = C15002B_001,
edu.black.male = C15002B_002,
edu.black.male.lessGED = C15002B_003,
edu.black.male.GED = C15002B_004,
edu.black.male.somecollege = C15002B_005,
edu.black.male.bachelors = C15002B_006,
edu.black.female = C15002B_007,
edu.black.female.lessGED = C15002B_008,
edu.black.female.GED = C15002B_009,
edu.black.female.somecollege = C15002B_010,
edu.black.female.bachelors = C15002B_011,
edu.americanindian = C15002C_001,
edu.americanindian.male = C15002C_002,
edu.americanindian.male.lessGED = C15002C_003,
edu.americanindian.male.GED = C15002C_004,
edu.americanindian.male.somecollege = C15002C_005,
edu.americanindian.male.bachelors = C15002C_006,
edu.americanindian.female = C15002C_007,
edu.americanindian.female.lessGED = C15002C_008,
edu.americanindian.female.GED =	C15002C_009,
edu.americanindian.female.somecollege = C15002C_010,
edu.americanindian.female.bachelors = C15002C_011,
edu.asian = C15002D_001,
edu.asian.male = C15002D_002,
edu.asian.male.lessGED = C15002D_003,
edu.asian.male.GED = C15002D_004,
edu.asian.male.somecollege = C15002D_005,
edu.asian.male.bachelors = C15002D_006,
edu.asian.female = C15002D_007,
edu.asian.female.lessGED = C15002D_008,
edu.asian.female.GED =	C15002D_009,
edu.asian.female.somecollege = C15002D_010,
edu.asian.female.bachelors = C15002D_011,
edu.pacificislander = C15002E_001,
edu.pacificislander.male = C15002E_002,
edu.pacificislander.male.lessGED = C15002E_003,
edu.pacificislander.male.GED = C15002E_004,
edu.pacificislander.male.somecollege = C15002E_005,
edu.pacificislander.male.bachelors = C15002E_006,
edu.pacificislander.female = C15002E_007,
edu.pacificislander.female.lessGED = C15002E_008,
edu.pacificislander.female.GED =	C15002E_009,
edu.pacificislander.female.somecollege = C15002E_010,
edu.pacificislander.female.bachelors = C15002E_011)
# if you want itB15011_001 B15011_002 B15011_003	B15011_004	B15011_005	B15011_006	B15011_007	B15011_008	B15011_009	B15011_010	B15011_011	B15011_012	B15011_013	B15011_014	B15011_015	B15011_016	B15011_017	B15011_018	B15011_019	B15011_020	B15011_021	B15011_022	B15011_023	B15011_024	B15011_025	B15011_026	B15011_027	B15011_028	B15011_029	B15011_030	B15011_031	B15011_032	B15011_033	B15011_034	B15011_035	B15011_036	B15011_037	B15011_038	B15011_039	B15012_001	B15012_002	B15012_003	B15012_004	B15012_005	B15012_006	B15012_007	B15012_008	B15012_009	B15012_010
# create a new .csv file
write.csv(dfA, gsub("pre", "post", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/EMPpre.csv"
PREdf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREdf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[EMPLOYMENT STATUS BY AGE, SEX, AND LABOR FORCE GROUPING]
dfA <- plyr::rename(df, c("State" = "B23006" )) %>% dplyr::select(starts_with("B23006")) %>% dplyr::select(B23006:B23006_029) %>% plyr::rename(c("B23006" = "State" ))
#[MEAN HOURS WORKED BY SEX]
dfB <- plyr::rename(df, c("State" = "B23020" )) %>% dplyr::select(starts_with("B23020")) %>% dplyr::select(B23020:B23020_003) %>% plyr::rename(c("B23020" = "State" ))
#[EMPLOYMENT STATUS BY LABOR FORCE GROUPING]
dfC <- plyr::rename(df, c("State" = "B23025" )) %>% dplyr::select(starts_with("B23025")) %>% dplyr::select(B23025:B23025_007) %>% plyr::rename(c("B23025" = "State" ))
#JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
#RENAME
dfZ <- dplyr::rename(df2, emp.edu.total = B23006_001,
emp.lessGED = B23006_002,
emp.lessGED.inlaborpool = B23006_003,
emp.lessGED.inlaborpool.armedforces = B23006_004,
emp.lessGED.inlaborpool.civilian = B23006_005,
emp.lessGED.inlaborpool.civilian.employed = B23006_006,
emp.lessGED.inlaborpool.civilian.unemployed = B23006_007,
emp.lessGED.outlaborpool= B23006_008,
emp.GED = B23006_09,
emp.GED.inlaborpool = B23006_010,
emp.GED.inlaborpool.armedforces = B23006_011,
emp.GED.inlaborpool.civilian = B23006_012,
emp.GED.inlaborpool.civilian.employed = B23006_013,
emp.GED.inlaborpool.civilian.unemployed = B23006_014,
emp.GED.outlaborpool= B23006_015,
emp.somecollege = B23006_016,
emp.somecollege.inlaborpool = B23006_017,
emp.somecollege.inlaborpool.armedforces = B23006_018,
emp.somecollege.inlaborpool.civilian = B23006_019,
emp.somecollege.inlaborpool.civilian.employed = B23006_020,
emp.somecollege.inlaborpool.civilian.unemployed = B23006_021,
emp.somecollege.outlaborpool= B23006_022,
emp.bachelors = B23006_023,
emp.bachelors.inlaborpool = B23006_024,
emp.bachelors.inlaborpool.armedforces = B23006_025,
emp.bachelors.inlaborpool.civilian = B23006_026,
emp.bachelors.inlaborpool.civilian.employed = B23006_027,
emp.bachelors.inlaborpool.civilian.unemployed = B23006_028,
emp.bachelors.outlaborpool= B23006_029,
emp.meanannualhrsworked = B23020_001,
emp.meanannualhrsworked.male = B23020_002,
emp.meanannualhrsworked.female = B23020_003,
emp.status.total = B23025_001,
emp.status.inlaborpool = B23025_002,
emp.status.inlaborpool.civilian = B23025_003,
emp.status.inlaborpool.civilian.employed = B23025_004,
emp.status.inlaborpool.civilian.unemployed = B23025_005,
emp.status.inlaborpool.armedforces = 	B23025_006,
emp.status.outlaborpool = B23025_007)
# create a new .csv file
write.csv(dfZ, gsub("pre", "post", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
file_path = "../01 Data/EMPpre.csv"
PREdf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
df <- PREdf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
df <- plyr::rename(df, c("AreaName" = "State" ))
dfA <- plyr::rename(df, c("State" = "B23006" )) %>% dplyr::select(starts_with("B23006")) %>% dplyr::select(B23006:B23006_029) %>% plyr::rename(c("B23006" = "State" ))
dfB <- plyr::rename(df, c("State" = "B23020" )) %>% dplyr::select(starts_with("B23020")) %>% dplyr::select(B23020:B23020_003) %>% plyr::rename(c("B23020" = "State" ))
dfC <- plyr::rename(df, c("State" = "B23025" )) %>% dplyr::select(starts_with("B23025")) %>% dplyr::select(B23025:B23025_007) %>% plyr::rename(c("B23025" = "State" ))
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
dfZ <- dplyr::rename(df2, emp.edu.total = B23006_001,
emp.lessGED = B23006_002,
emp.lessGED.inlaborpool = B23006_003,
emp.lessGED.inlaborpool.armedforces = B23006_004,
emp.lessGED.inlaborpool.civilian = B23006_005,
emp.lessGED.inlaborpool.civilian.employed = B23006_006,
emp.lessGED.inlaborpool.civilian.unemployed = B23006_007,
emp.lessGED.outlaborpool= B23006_008,
emp.GED = B23006_09,
emp.GED.inlaborpool = B23006_010,
emp.GED.inlaborpool.armedforces = B23006_011,
emp.GED.inlaborpool.civilian = B23006_012,
emp.GED.inlaborpool.civilian.employed = B23006_013,
emp.GED.inlaborpool.civilian.unemployed = B23006_014,
emp.GED.outlaborpool= B23006_015,
emp.somecollege = B23006_016,
emp.somecollege.inlaborpool = B23006_017,
emp.somecollege.inlaborpool.armedforces = B23006_018,
emp.somecollege.inlaborpool.civilian = B23006_019,
emp.somecollege.inlaborpool.civilian.employed = B23006_020,
emp.somecollege.inlaborpool.civilian.unemployed = B23006_021,
emp.somecollege.outlaborpool= B23006_022,
emp.bachelors = B23006_023,
emp.bachelors.inlaborpool = B23006_024,
emp.bachelors.inlaborpool.armedforces = B23006_025,
emp.bachelors.inlaborpool.civilian = B23006_026,
emp.bachelors.inlaborpool.civilian.employed = B23006_027,
emp.bachelors.inlaborpool.civilian.unemployed = B23006_028,
emp.bachelors.outlaborpool= B23006_029,
emp.meanannualhrsworked = B23020_001,
emp.meanannualhrsworked.male = B23020_002,
emp.meanannualhrsworked.female = B23020_003,
emp.status.total = B23025_001,
emp.status.inlaborpool = B23025_002,
emp.status.inlaborpool.civilian = B23025_003,
emp.status.inlaborpool.civilian.employed = B23025_004,
emp.status.inlaborpool.civilian.unemployed = B23025_005,
emp.status.inlaborpool.armedforces = 	B23025_006,
emp.status.outlaborpool = B23025_007)
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/EMPpre.csv"
PREdf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREdf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[EMPLOYMENT STATUS BY AGE, SEX, AND LABOR FORCE GROUPING]
dfA <- plyr::rename(df, c("State" = "B23006" )) %>% dplyr::select(starts_with("B23006")) %>% dplyr::select(B23006:B23006_029) %>% plyr::rename(c("B23006" = "State" ))
#[MEAN HOURS WORKED BY SEX]
dfB <- plyr::rename(df, c("State" = "B23020" )) %>% dplyr::select(starts_with("B23020")) %>% dplyr::select(B23020:B23020_003) %>% plyr::rename(c("B23020" = "State" ))
#[EMPLOYMENT STATUS BY LABOR FORCE GROUPING]
dfC <- plyr::rename(df, c("State" = "B23025" )) %>% dplyr::select(starts_with("B23025")) %>% dplyr::select(B23025:B23025_007) %>% plyr::rename(c("B23025" = "State" ))
#JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
#RENAME
dfZ <- dplyr::rename(df2, emp.edu.total = B23006_001,
emp.lessGED = B23006_002,
emp.lessGED.inlaborpool = B23006_003,
emp.lessGED.inlaborpool.armedforces = B23006_004,
emp.lessGED.inlaborpool.civilian = B23006_005,
emp.lessGED.inlaborpool.civilian.employed = B23006_006,
emp.lessGED.inlaborpool.civilian.unemployed = B23006_007,
emp.lessGED.outlaborpool= B23006_008,
emp.GED = B23006_009,
emp.GED.inlaborpool = B23006_010,
emp.GED.inlaborpool.armedforces = B23006_011,
emp.GED.inlaborpool.civilian = B23006_012,
emp.GED.inlaborpool.civilian.employed = B23006_013,
emp.GED.inlaborpool.civilian.unemployed = B23006_014,
emp.GED.outlaborpool= B23006_015,
emp.somecollege = B23006_016,
emp.somecollege.inlaborpool = B23006_017,
emp.somecollege.inlaborpool.armedforces = B23006_018,
emp.somecollege.inlaborpool.civilian = B23006_019,
emp.somecollege.inlaborpool.civilian.employed = B23006_020,
emp.somecollege.inlaborpool.civilian.unemployed = B23006_021,
emp.somecollege.outlaborpool= B23006_022,
emp.bachelors = B23006_023,
emp.bachelors.inlaborpool = B23006_024,
emp.bachelors.inlaborpool.armedforces = B23006_025,
emp.bachelors.inlaborpool.civilian = B23006_026,
emp.bachelors.inlaborpool.civilian.employed = B23006_027,
emp.bachelors.inlaborpool.civilian.unemployed = B23006_028,
emp.bachelors.outlaborpool= B23006_029,
emp.meanannualhrsworked = B23020_001,
emp.meanannualhrsworked.male = B23020_002,
emp.meanannualhrsworked.female = B23020_003,
emp.status.total = B23025_001,
emp.status.inlaborpool = B23025_002,
emp.status.inlaborpool.civilian = B23025_003,
emp.status.inlaborpool.civilian.employed = B23025_004,
emp.status.inlaborpool.civilian.unemployed = B23025_005,
emp.status.inlaborpool.armedforces = 	B23025_006,
emp.status.outlaborpool = B23025_007)
# create a new .csv file
write.csv(dfZ, gsub("pre", "post", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/EMPpre.csv"
PREdf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREdf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[EMPLOYMENT STATUS BY AGE, SEX, AND LABOR FORCE GROUPING]
dfA <- plyr::rename(df, c("State" = "B23006" )) %>% dplyr::select(starts_with("B23006")) %>% dplyr::select(B23006:B23006_029) %>% plyr::rename(c("B23006" = "State" ))
#[MEAN HOURS WORKED BY SEX]
dfB <- plyr::rename(df, c("State" = "B23020" )) %>% dplyr::select(starts_with("B23020")) %>% dplyr::select(B23020:B23020_003) %>% plyr::rename(c("B23020" = "State" ))
#[EMPLOYMENT STATUS BY LABOR FORCE GROUPING]
dfC <- plyr::rename(df, c("State" = "B23025" )) %>% dplyr::select(starts_with("B23025")) %>% dplyr::select(B23025:B23025_007) %>% plyr::rename(c("B23025" = "State" ))
#JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
#RENAME
dfZ <- dplyr::rename(df2, emp.edu.total = B23006_001,
emp.lessGED = B23006_002,
emp.lessGED.inlaborpool = B23006_003,
emp.lessGED.inlaborpool.armedforces = B23006_004,
emp.lessGED.inlaborpool.civilian = B23006_005,
emp.lessGED.inlaborpool.civilian.employed = B23006_006,
emp.lessGED.inlaborpool.civilian.unemployed = B23006_007,
emp.lessGED.outlaborpool= B23006_008,
emp.GED = B23006_009,
emp.GED.inlaborpool = B23006_010,
emp.GED.inlaborpool.armedforces = B23006_011,
emp.GED.inlaborpool.civilian = B23006_012,
emp.GED.inlaborpool.civilian.employed = B23006_013,
emp.GED.inlaborpool.civilian.unemployed = B23006_014,
emp.GED.outlaborpool= B23006_015,
emp.somecollege = B23006_016,
emp.somecollege.inlaborpool = B23006_017,
emp.somecollege.inlaborpool.armedforces = B23006_018,
emp.somecollege.inlaborpool.civilian = B23006_019,
emp.somecollege.inlaborpool.civilian.employed = B23006_020,
emp.somecollege.inlaborpool.civilian.unemployed = B23006_021,
emp.somecollege.outlaborpool= B23006_022,
emp.bachelors = B23006_023,
emp.bachelors.inlaborpool = B23006_024,
emp.bachelors.inlaborpool.armedforces = B23006_025,
emp.bachelors.inlaborpool.civilian = B23006_026,
emp.bachelors.inlaborpool.civilian.employed = B23006_027,
emp.bachelors.inlaborpool.civilian.unemployed = B23006_028,
emp.bachelors.outlaborpool= B23006_029,
emp.meanannualhrsworked = B23020_001,
emp.meanannualhrsworked.male = B23020_002,
emp.meanannualhrsworked.female = B23020_003,
emp.status.total = B23025_001,
emp.status.inlaborpool = B23025_002,
emp.status.inlaborpool.civilian = B23025_003,
emp.status.inlaborpool.civilian.employed = B23025_004,
emp.status.inlaborpool.civilian.unemployed = B23025_005,
emp.status.inlaborpool.armedforces = 	B23025_006,
emp.status.outlaborpool = B23025_007)
# create a new .csv file
write.csv(dfZ, gsub("pre", "post", file_path), row.names=FALSE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/EMPpre.csv"
PREdf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[FILTER OUT UNNECESSARY COLUMNS]
df <- PREdf %>% plyr::rename(c("SummaryLevel" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("StateFIPS" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("GEOID" = "DEL" )) %>% dplyr::select(-DEL) %>% plyr::rename(c("State" = "DEL" )) %>% dplyr::select(-DEL)
#[FILTER OUT DC AND PUERTO RICO]
df <- df %>% dplyr::filter(AreaName !='District of Columbia') %>% dplyr::filter(AreaName !='Puerto Rico')
#[RENAME TO PRESERVE COLUMN]
df <- plyr::rename(df, c("AreaName" = "State" ))
#[SEPARATE DESIRED COLUMNS]
#[EMPLOYMENT STATUS BY AGE, SEX, AND LABOR FORCE GROUPING]
dfA <- plyr::rename(df, c("State" = "B23006" )) %>% dplyr::select(starts_with("B23006")) %>% dplyr::select(B23006:B23006_029) %>% plyr::rename(c("B23006" = "State" ))
#[MEAN HOURS WORKED BY SEX]
dfB <- plyr::rename(df, c("State" = "B23020" )) %>% dplyr::select(starts_with("B23020")) %>% dplyr::select(B23020:B23020_003) %>% plyr::rename(c("B23020" = "State" ))
#[EMPLOYMENT STATUS BY LABOR FORCE GROUPING]
dfC <- plyr::rename(df, c("State" = "B23025" )) %>% dplyr::select(starts_with("B23025")) %>% dplyr::select(B23025:B23025_007) %>% plyr::rename(c("B23025" = "State" ))
#JOIN
df1 <- dplyr::left_join(dfA, dfB, by="State")
df2 <- dplyr::left_join(df1, dfC, by="State")
#RENAME
dfF <- dplyr::rename(df2, emp.edu.total = B23006_001,
emp.lessGED = B23006_002,
emp.lessGED.inlaborpool = B23006_003,
emp.lessGED.inlaborpool.armedforces = B23006_004,
emp.lessGED.inlaborpool.civilian = B23006_005,
emp.lessGED.inlaborpool.civilian.employed = B23006_006,
emp.lessGED.inlaborpool.civilian.unemployed = B23006_007,
emp.lessGED.outlaborpool= B23006_008,
emp.GED = B23006_009,
emp.GED.inlaborpool = B23006_010,
emp.GED.inlaborpool.armedforces = B23006_011,
emp.GED.inlaborpool.civilian = B23006_012,
emp.GED.inlaborpool.civilian.employed = B23006_013,
emp.GED.inlaborpool.civilian.unemployed = B23006_014,
emp.GED.outlaborpool= B23006_015,
emp.somecollege = B23006_016,
emp.somecollege.inlaborpool = B23006_017,
emp.somecollege.inlaborpool.armedforces = B23006_018,
emp.somecollege.inlaborpool.civilian = B23006_019,
emp.somecollege.inlaborpool.civilian.employed = B23006_020,
emp.somecollege.inlaborpool.civilian.unemployed = B23006_021,
emp.somecollege.outlaborpool= B23006_022,
emp.bachelors = B23006_023,
emp.bachelors.inlaborpool = B23006_024,
emp.bachelors.inlaborpool.armedforces = B23006_025,
emp.bachelors.inlaborpool.civilian = B23006_026,
emp.bachelors.inlaborpool.civilian.employed = B23006_027,
emp.bachelors.inlaborpool.civilian.unemployed = B23006_028,
emp.bachelors.outlaborpool= B23006_029,
emp.meanannualhrsworked = B23020_001,
emp.meanannualhrsworked.male = B23020_002,
emp.meanannualhrsworked.female = B23020_003,
emp.status.total = B23025_001,
emp.status.inlaborpool = B23025_002,
emp.status.inlaborpool.civilian = B23025_003,
emp.status.inlaborpool.civilian.employed = B23025_004,
emp.status.inlaborpool.civilian.unemployed = B23025_005,
emp.status.inlaborpool.armedforces = 	B23025_006,
emp.status.outlaborpool = B23025_007)
# create a new .csv file
write.csv(dfF, gsub("pre", "post", file_path), row.names=FALSE, na = "")
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
library(knitr)
source("../01 Data/getpreINC.R")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/due/s17dvfinalproject-dvproject-4-katzen-lin-hollman./01 Data")
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
library(knitr)
source("../01 Data/getpreINC.R")
postINC <- read.csv("https://query.data.world/s/dddz3ryuy2q0nb6jl47tx91jv",header=T)
preINC <- read.csv("../01 Data/preINC.csv",header=T)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
options(max.print = 40)
library(knitr)
source("../01 Data/getpreINC.R")
kable(preINC, digits = 0)
source("../01 Data/etlINC.r", echo=TRUE, print.eval=FALSE, verbose=FALSE, keep.source=TRUE)
library(knitr)
source("../01 Data/getpostINC.R")
kable(postINC, digits = 0)
