phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values")
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
#theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
plot(phollman)
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(~sex,) +
labs(title="Differences in Reported vs. Actual Values, separated by gender")
plot(phollman)
pwd()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/wip proj2.R')
ourdata = read.csv("01 Data/Davis.csv", header = TRUE)
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);summary (ourdata)
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/DataVisualization/CannataUTDV:dvproject-2-katzen-hollman-park-lin/01 Data/getdaviscsv.R')
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);head (ourdata)
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T); head(ourdata)
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/DataVisualization/CannataUTDV:dvproject-2-katzen-hollman-park-lin/graphhollman.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/SPRING 2017/3. CS329E/RStudio files/DataVisualization/CannataUTDV:dvproject-2-katzen-hollman-park-lin/graphhollman.R')
require(tidyr)
require(dplyr)
require(ggplot2)
require("jsonlite")
require("RCurl")
FigureNum <<- 0 # Global variable
ourdata <- read.csv("https://query.data.world/s/7j674kw1z10lpmy7gf3i2lny5",header=T);
phollman <- ggplot(data = ourdata) +
geom_point(aes(x=weight, y=repwt), color="grey") +
facet_grid(.~sex) +
xlim(40,160) +
ylim(40,160)
labs(title="Differences in Reported vs. Actual Values, separated by gender")
a=c(1,2,3,4,5); x=a; y=a*2; z=a^3; df = data.frame(a,x,y,z)
plot = tidyr::gather(df, variable, value, -a) %>% ggplot() +
geom_point(aes(x=a, y=value, colour = variable)) +
geom_line(aes(x=a, y=value, colour = variable))
print(plot)
print (df)
b=c(1,2,3,4,5); x=b; y=b*2; z=b^3; df = data.frame(b,x,y,z)
plot = tidyr::gather(df, variable, value, -b) %>% ggplot() +
geom_point(aes(x=b, y=value, colour = variable)) +
geom_line(aes(x=b, y=value, colour = variable))
print(plot)
b=c(1,2,3,4,5); x=b; y=b*2; z=b^3; df2 = data.frame(a,x,y,z)
plot2 = tidyr::gather(df2, variable, value, -b)
print (plot2)
b=c(1,2,3,4,5); x=b; y=b*2; z=b^3; df2 = data.frame(b,x,y,z)
plot2 = tidyr::gather(df2, variable, value, -b)
print (plot2)
# df <- read.csv("/Users/pcannata/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
'
I loaded my REST server onto my Mac so I could run it exclusively during class.
To do this:
Download my REST server and unzip it
cd to the unzipped folder
cd CarnotDist/CarnotRE
../dist/bin/jython -J-Xmx1g restful_start.py
then use localhost:5011 below
'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'localhost:5011/rest/native/?query="select * from SuperStoreOrders"')),httpheader=c(DB='jdbc:data:world:sql:cannata:superstoreorders', USER='cannata', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
summary(df)
head(df)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_histogram(aes(x=Shipping_Cost)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
lapply('alphabet begins with \\\ abc', gsub, pattern="[ae\\]",replacement= "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmedfinal <- PREmeddf %>% dplyr::sample_n(200000)
write.csv(PREmeddf4, row.names=TRUE, na = "")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/due/s17dvfinalproject-dvproject-4-katzen-lin-hollman./01 Data")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmedfinal <- PREmeddf %>% dplyr::sample_n(200000)
write.csv(PREmeddf4, row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmedfinal <- PREmeddf %>% dplyr::sample_n(200000)
write.csv(PREmeddf, row.names=TRUE, na = "")
r)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
PREmeddf5$GeoLocation <- PREmeddf4$GeoLocation %>% gsub( ")" , "") %>% gsub("(", "")
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub( ")" , "") %>% gsub("(", "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub( ")" , "") %>% gsub("(", "")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf4, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub( ")" , "") %>% gsub("(", "")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub( ")" , "") %>% gsub("(", "")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub( ")" , "", fixed=TRUE) %>% gsub("(", "", fixed=TRUE)
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub("\\(|\\)", "", n)
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- postmed$GeoLocation %>% gsub("[()]", "")
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation < gsub("[()]", "", postmed$GeoLocation)
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- gsub("[(]", "", postmed$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", postmed$GeoLocation)
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, into = c("Latitude", "Longitude"), sep=",")
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, GeoLocation, into = c("Latitude", "Longitude"), se)
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/postMED1.csv"
postmed <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmeddf5 <- postmed
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, GeoLocation, into = c("Latitude", "Longitude"), sep=",")
#[SELECT 20000 SAMPLES]
write.csv(PREmeddf5, gsub("post", "final", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[STRIP NONUSED COLUMNS]
PREmeddf1 <- PREmeddf %>% dplyr::filter(!is.na(Greater_Risk_Data_Value)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(!is.na(Lesser_Risk_Data_Value)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote)) %>% dplyr::select(-Data_Value_Symbol) %>% dplyr::select(-DataSource) %>% dplyr::select(-Data_Value_Type) %>% dplyr::select(-Greater_Risk_Data_Value_Footnote)	%>% dplyr::select(-Greater_Risk_Data_Value_Footnote_Symbol) %>% dplyr::select(-SexOfSexualContacts) %>% dplyr::select(-SexualIdentity)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote_Symbol)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote)	%>% dplyr::select(-StratID1) %>% dplyr::select(-StratID2)	%>% dplyr::select(-StratID3)	%>% dplyr::select(-StratID4)	%>% dplyr::select(-StratID5)	%>% dplyr::select(-StratID6) %>% dplyr::select(-TopicId) %>% dplyr::select(-SubTopicID) %>% dplyr::select(-QuestionCode) %>% dplyr::select(-Stratification)
#[SEPARATE DESIRED COLUMNS]
PREmeddf2 <- PREmeddf1
#[ROWS OF CURRENT MARIJUANA USE]
marijuana <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current marijuana use")
#[ROWS OF CURRENT ALCOHOL USE]
alcohol <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current alcohol use")
#[ROWS OF CURRENT CIGARETTE USE]
cigarette <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current cigarette use")
#[ROWS OF SUICIDE CONSIDERATION ]
suicide <- dplyr::filter(PREmeddf2, ShortQuestionText=="Suicide consideration")
#[ROWS OF PHYSICAL FIGHTING]
fighting <- dplyr::filter(PREmeddf2, ShortQuestionText=="Physical fighting")
#[ROWS OF WEIGHT LOSS]
weight <- dplyr::filter(PREmeddf2, ShortQuestionText=="Weight loss")
#[JOIN]
joinedgroups <- dplyr::bind_rows(marijuana, alcohol)
joinedgroups <- dplyr::bind_rows(joinedgroups, cigarette)
joinedgroups <- dplyr::bind_rows(joinedgroups, suicide)
joinedgroups <- dplyr::bind_rows(joinedgroups, fighting)
joinedgroups <- dplyr::bind_rows(joinedgroups, weight)
#CREATE COLUMN: STATES (FULL)
PREmeddf3 <- joinedgroups
listofab <- PREmeddf3$LocationAbbr
listofstates <- c()
for (every in listofab){
if (is.na(every)){
listofstates <- c(listofstates, "XX")
next}
if (every %in% state.abb){
for (i in  (1:50)){
print (i)
if (every==state.abb[i]){
listofstates <- c(listofstates, state.name[i])}}}
else{
listofstates <- c(listofstates, "XX")}
}
PREmeddf3["State"] <- NA
PREmeddf3$State <- listofstates
PREmeddf4 <- PREmeddf3 %>% dplyr::filter(State!="XX") %>% dplyr::select(-LocationDesc) %>% dplyr::select(-LocationAbbr)
PREmeddf5 <- PREmeddf4
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, GeoLocation, into = c("Latitude", "Longitude"), sep=",")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf4, gsub("pre", "post", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[STRIP NONUSED COLUMNS]
PREmeddf1 <- PREmeddf %>% dplyr::filter(!is.na(Greater_Risk_Data_Value)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(!is.na(Lesser_Risk_Data_Value)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote)) %>% dplyr::select(-Data_Value_Symbol) %>% dplyr::select(-DataSource) %>% dplyr::select(-Data_Value_Type) %>% dplyr::select(-Greater_Risk_Data_Value_Footnote)	%>% dplyr::select(-Greater_Risk_Data_Value_Footnote_Symbol) %>% dplyr::select(-SexOfSexualContacts) %>% dplyr::select(-SexualIdentity)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote_Symbol)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote)	%>% dplyr::select(-StratID1) %>% dplyr::select(-StratID2)	%>% dplyr::select(-StratID3)	%>% dplyr::select(-StratID4)	%>% dplyr::select(-StratID5)	%>% dplyr::select(-StratID6) %>% dplyr::select(-TopicId) %>% dplyr::select(-SubTopicID) %>% dplyr::select(-QuestionCode) %>% dplyr::select(-Stratification)
#[SEPARATE DESIRED COLUMNS]
PREmeddf2 <- PREmeddf1
#[ROWS OF CURRENT MARIJUANA USE]
marijuana <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current marijuana use")
#[ROWS OF CURRENT ALCOHOL USE]
alcohol <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current alcohol use")
#[ROWS OF CURRENT CIGARETTE USE]
cigarette <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current cigarette use")
#[ROWS OF SUICIDE CONSIDERATION ]
suicide <- dplyr::filter(PREmeddf2, ShortQuestionText=="Suicide consideration")
#[ROWS OF PHYSICAL FIGHTING]
fighting <- dplyr::filter(PREmeddf2, ShortQuestionText=="Physical fighting")
#[ROWS OF WEIGHT LOSS]
weight <- dplyr::filter(PREmeddf2, ShortQuestionText=="Weight loss")
#[JOIN]
joinedgroups <- dplyr::bind_rows(marijuana, alcohol)
joinedgroups <- dplyr::bind_rows(joinedgroups, cigarette)
joinedgroups <- dplyr::bind_rows(joinedgroups, suicide)
joinedgroups <- dplyr::bind_rows(joinedgroups, fighting)
joinedgroups <- dplyr::bind_rows(joinedgroups, weight)
#CREATE COLUMN: STATES (FULL)
PREmeddf3 <- joinedgroups
listofab <- PREmeddf3$LocationAbbr
listofstates <- c()
for (every in listofab){
if (is.na(every)){
listofstates <- c(listofstates, "XX")
next}
if (every %in% state.abb){
for (i in  (1:50)){
print (i)
if (every==state.abb[i]){
listofstates <- c(listofstates, state.name[i])}}}
else{
listofstates <- c(listofstates, "XX")}
}
PREmeddf3["State"] <- NA
PREmeddf3$State <- listofstates
PREmeddf4 <- PREmeddf3 %>% dplyr::filter(State!="XX") %>% dplyr::select(-LocationDesc) %>% dplyr::select(-LocationAbbr)
PREmeddf5 <- PREmeddf4
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, GeoLocation, into = c("Latitude", "Longitude"), sep=",")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("pre", "post", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmedfinal <- PREmeddf %>% dplyr::sample_n(50000)
write.csv(PREmedfinal, row.names=TRUE, na = "")
write.csv(PREmedfinal, row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMED.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
PREmedfinal <- PREmeddf %>% dplyr::sample_n(50000)
write.csv(PREmedfinal, gsub("pre", "pre1", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMEDcopy.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[STRIP NONUSED COLUMNS]
PREmeddf1 <- PREmeddf %>% dplyr::filter(!is.na(Greater_Risk_Data_Value)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(!is.na(Lesser_Risk_Data_Value)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote)) %>% dplyr::select(-Data_Value_Symbol) %>% dplyr::select(-DataSource) %>% dplyr::select(-Data_Value_Type) %>% dplyr::select(-Greater_Risk_Data_Value_Footnote)	%>% dplyr::select(-Greater_Risk_Data_Value_Footnote_Symbol) %>% dplyr::select(-SexOfSexualContacts) %>% dplyr::select(-SexualIdentity)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote_Symbol)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote)	%>% dplyr::select(-StratID1) %>% dplyr::select(-StratID2)	%>% dplyr::select(-StratID3)	%>% dplyr::select(-StratID4)	%>% dplyr::select(-StratID5)	%>% dplyr::select(-StratID6) %>% dplyr::select(-TopicId) %>% dplyr::select(-SubTopicID) %>% dplyr::select(-QuestionCode) %>% dplyr::select(-Stratification)
#[SEPARATE DESIRED COLUMNS]
PREmeddf2 <- PREmeddf1
#[ROWS OF CURRENT MARIJUANA USE]
marijuana <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current marijuana use")
#[ROWS OF CURRENT ALCOHOL USE]
alcohol <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current alcohol use")
#[ROWS OF CURRENT CIGARETTE USE]
cigarette <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current cigarette use")
#[ROWS OF SUICIDE CONSIDERATION ]
suicide <- dplyr::filter(PREmeddf2, ShortQuestionText=="Suicide consideration")
#[ROWS OF PHYSICAL FIGHTING]
fighting <- dplyr::filter(PREmeddf2, ShortQuestionText=="Physical fighting")
#[ROWS OF WEIGHT LOSS]
weight <- dplyr::filter(PREmeddf2, ShortQuestionText=="Weight loss")
#[JOIN]
joinedgroups <- dplyr::bind_rows(marijuana, alcohol)
joinedgroups <- dplyr::bind_rows(joinedgroups, cigarette)
joinedgroups <- dplyr::bind_rows(joinedgroups, suicide)
joinedgroups <- dplyr::bind_rows(joinedgroups, fighting)
joinedgroups <- dplyr::bind_rows(joinedgroups, weight)
#CREATE COLUMN: STATES (FULL)
PREmeddf3 <- joinedgroups
listofab <- PREmeddf3$LocationAbbr
listofstates <- c()
for (every in listofab){
if (is.na(every)){
listofstates <- c(listofstates, "XX")
next}
if (every %in% state.abb){
for (i in  (1:50)){
print (i)
if (every==state.abb[i]){
listofstates <- c(listofstates, state.name[i])}}}
else{
listofstates <- c(listofstates, "XX")}
}
PREmeddf3["State"] <- NA
PREmeddf3$State <- listofstates
PREmeddf4 <- PREmeddf3 %>% dplyr::filter(State!="XX") %>% dplyr::select(-LocationDesc) %>% dplyr::select(-LocationAbbr)
PREmeddf5 <- PREmeddf4
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, GeoLocation, into = c("Latitude", "Longitude"), sep=",")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("pre", "post", file_path), row.names=TRUE, na = "")
require(readr)
require(plyr)
require(dplyr)
#[CALL CSV]
file_path = "../01 Data/preMEDcopy.csv"
PREmeddf <- readr::read_csv(file_path)
options(stringsAsFactors = FALSE)
#[STRIP NONUSED COLUMNS]
PREmeddf1 <- PREmeddf %>% dplyr::filter(!is.na(Greater_Risk_Data_Value)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(is.na(Greater_Risk_Data_Value_Footnote)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote_Symbol)) %>% dplyr::filter(!is.na(Lesser_Risk_Data_Value)) %>% dplyr::filter(is.na(Lesser_Risk_Data_Value_Footnote)) %>% dplyr::select(-Data_Value_Symbol) %>% dplyr::select(-DataSource) %>% dplyr::select(-Data_Value_Type) %>% dplyr::select(-Greater_Risk_Data_Value_Footnote)	%>% dplyr::select(-Greater_Risk_Data_Value_Footnote_Symbol) %>% dplyr::select(-SexOfSexualContacts) %>% dplyr::select(-SexualIdentity)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote_Symbol)	%>% dplyr::select(-Lesser_Risk_Data_Value_Footnote)	%>% dplyr::select(-StratID1) %>% dplyr::select(-StratID2)	%>% dplyr::select(-StratID3)	%>% dplyr::select(-StratID4)	%>% dplyr::select(-StratID5)	%>% dplyr::select(-StratID6) %>% dplyr::select(-TopicId) %>% dplyr::select(-SubTopicID) %>% dplyr::select(-QuestionCode) %>% dplyr::select(-StratificationType)
#[SEPARATE DESIRED COLUMNS]
PREmeddf2 <- PREmeddf1
#[ROWS OF CURRENT MARIJUANA USE]
marijuana <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current marijuana use")
#[ROWS OF CURRENT ALCOHOL USE]
alcohol <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current alcohol use")
#[ROWS OF CURRENT CIGARETTE USE]
cigarette <- dplyr::filter(PREmeddf2, ShortQuestionText=="Current cigarette use")
#[ROWS OF SUICIDE CONSIDERATION ]
suicide <- dplyr::filter(PREmeddf2, ShortQuestionText=="Suicide consideration")
#[ROWS OF PHYSICAL FIGHTING]
fighting <- dplyr::filter(PREmeddf2, ShortQuestionText=="Physical fighting")
#[ROWS OF WEIGHT LOSS]
weight <- dplyr::filter(PREmeddf2, ShortQuestionText=="Weight loss")
#[JOIN]
joinedgroups <- dplyr::bind_rows(marijuana, alcohol)
joinedgroups <- dplyr::bind_rows(joinedgroups, cigarette)
joinedgroups <- dplyr::bind_rows(joinedgroups, suicide)
joinedgroups <- dplyr::bind_rows(joinedgroups, fighting)
joinedgroups <- dplyr::bind_rows(joinedgroups, weight)
#CREATE COLUMN: STATES (FULL)
PREmeddf3 <- joinedgroups
listofab <- PREmeddf3$LocationAbbr
listofstates <- c()
for (every in listofab){
if (is.na(every)){
listofstates <- c(listofstates, "XX")
next}
if (every %in% state.abb){
for (i in  (1:50)){
print (i)
if (every==state.abb[i]){
listofstates <- c(listofstates, state.name[i])}}}
else{
listofstates <- c(listofstates, "XX")}
}
PREmeddf3["State"] <- NA
PREmeddf3$State <- listofstates
PREmeddf4 <- PREmeddf3 %>% dplyr::filter(State!="XX") %>% dplyr::select(-LocationDesc) %>% dplyr::select(-LocationAbbr)
PREmeddf5 <- PREmeddf4
PREmeddf5$GeoLocation <- gsub("[(]", "", PREmeddf5$GeoLocation)
PREmeddf5$GeoLocation <- gsub("[)]", "", PREmeddf5$GeoLocation)
PREmeddf5 <- tidyr::separate(PREmeddf5, GeoLocation, into = c("Latitude", "Longitude"), sep=",")
#[SELECT 20000 SAMPLES]
#PREmedfinal <- PREmeddf4 %>% dplyr::sample_n(20000)
write.csv(PREmeddf5, gsub("pre", "post", file_path), row.names=TRUE, na = "")
