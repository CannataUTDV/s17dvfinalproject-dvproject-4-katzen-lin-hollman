FROM postMED
Group By State, Race
Order by State, Race"
generalfunction <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
crossplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
theme(axis.text.y=element_text(size=16, hjust=0.5)) +
geom_text(aes(x=Race, y=State, label=round(avg_risk)), size=6) +
geom_tile(aes(x=Race, y=State, fill=kpi), alpha=0.50)
ggplotly(crossplot)
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Greater_Risk_Data_Value, Race
from postMED"
generalfunction <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
histogramplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
geom_histogram(aes(x= Greater_Risk_Data_Value) +
facet_wrap(~Race)
ggplotly(histogramplot)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Greater_Risk_Data_Value, Race
from postMED"
generalfunction <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
histogramplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
geom_histogram(aes(x= Greater_Risk_Data_Value) +
facet_wrap(~Race)
#ggplotly(histogramplot)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Greater_Risk_Data_Value, Race
from postMED"
generalfunction <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
histogramplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
geom_histogram(aes(x= Greater_Risk_Data_Value)) +
facet_wrap(~Race)
ggplotly(histogramplot)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Greater_Risk_Data_Value, Race
from postMED"
generalfunction <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
histogramplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
geom_histogram(aes(x= Greater_Risk_Data_Value), binwidth = 10) +
facet_wrap(~Race)
ggplotly(histogramplot)
histogramplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
geom_histogram(aes(x= Greater_Risk_Data_Value, y = ..ncount..), binwidth = 10) +
facet_wrap(~Race)
ggplotly(histogramplot)
histogramplot <- ggplot(generalfunction) +
theme(axis.text.x=element_text(angle=90, size=16, vjust=0.5)) +
geom_histogram(aes(x= Greater_Risk_Data_Value, y = ..ncount..), binwidth = 5) +
facet_wrap(~Race)
ggplotly(histogramplot)
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT GeoLocation, AVG(postMED.Greater_Risk_Data_Value) avg_risk
FROM `postMED.csv/postMED`
Group by postMED.GeoLocation"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude, Longitude, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
dplyr::
output$Map <- leaflet(width = 400, height = 800) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng = Mapf$Longitude,
lat = Mapf$Latitude,
options = markerOptions(draggable = TRUE, riseOnHover = TRUE),
popup = as.character(paste(discounts$avg_risk,", ", Mapf$State))
)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude, Longitude, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
dplyr::
output$Map <- leaflet(width = 400, height = 800) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng = Mapf$Longitude,
lat = Mapf$Latitude,
options = markerOptions(draggable = TRUE, riseOnHover = TRUE),
popup = as.character(paste(Mapf$avg_risk,", ", Mapf$State))
)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude, Longitude, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
dplyr::
Map <- leaflet(width = 400, height = 800) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng = Mapf$Longitude,
lat = Mapf$Latitude,
options = markerOptions(draggable = TRUE, riseOnHover = TRUE),
popup = as.character(paste(Mapf$avg_risk,", ", Mapf$State))
)
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude, Longitude, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
Map <- leaflet(width = 400, height = 800) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng = Mapf$Longitude,
lat = Mapf$Latitude,
options = markerOptions(draggable = TRUE, riseOnHover = TRUE),
popup = as.character(paste(Mapf$avg_risk,", ", Mapf$State))
)
Map
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude, Longitude, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
Map <- leaflet(data = Mapf, width = 1000, height = 1000) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng = Mapf$Longitude,
lat = Mapf$Latitude,
options = markerOptions(draggable = TRUE, riseOnHover = TRUE),
popup = as.character(paste(Mapf$avg_risk,", ", Mapf$State))
)
Map
Mapf$Latitude
Mapf$Longitude
Map <- leaflet(data = Mapf, width = 1000, height = 1000) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng=Mapf$Longitude, lat=Mapf$Latitude)
Map
Map <- leaflet(data = Mapf, width = 1000, height = 1000) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng=Mapf$Longitude, lat=Mapf$Latitude) %>%
addCircleMarkers(lng = Mapf$Longitude, lat = Mapf$Latitude, radius = 100)
Map
Map <- leaflet(data = Mapf, width = 1000, height = 1000) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(lng=Mapf$Longitude, lat=Mapf$Latitude) %>%
addCircleMarkers(lng = Mapf$Longitude, lat = Mapf$Latitude, radius = 100, popupOptions = Mapf$avg_risk)
Map
Map <- leaflet(data = Mapf, width = 1000, height = 1000) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
#addMarkers(lng=Mapf$Longitude, lat=Mapf$Latitude) %>%
addCircleMarkers(lng = -98, lat = 39, radius = 100, popupOptions = Mapf$avg_risk)
Map
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
Map <- leaflet(data = Mapf) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(~Longitude, ~Latitude, popup = ~as.character(avg_risk))
Map
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude lat, Longitude long, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
Map <- leaflet(data = Mapf) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(~long, ~lat)
#addCircleMarkers(lng = -98, lat = 39, radius = 100, popupOptions = Mapf$avg_risk)
# addMarkers(lng = Mapf$Longitude,
#            lat = Mapf$Latitude,
#            options = markerOptions(draggable = TRUE, riseOnHover = TRUE),
#            popup = as.character(paste(Mapf$avg_risk,", ", Mapf$State))
#            )
Map
Map <- leaflet(data = Mapf) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(-98, 39)
Map
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude lat, Longitude long, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
Map <- leaflet(na.omit(data = Mapf)) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addProviderTiles("MapQuestOpen.Aerial") %>%
addMarkers(-98, 39)
Mapf
# server.R
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
require(leaflet)
require(plotly)
require(lubridate)
database = "khollman/s-17-dvfinalproject-dvproject-4-katzen-lin-hollman"
############################### GENERAL #############################
generalquery <- "SELECT Latitude lat, Longitude long, AVG(postMED.Greater_Risk_Data_Value) avg_risk, State
FROM `postMED.csv/postMED`
Group by Latitude, Longitude"
Mapf <- data.world::query(
data.world(token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtrYXR6ZW4iLCJpc3MiOiJhZ2VudDpra2F0emVuOjoyZTU5NGIzNS0wZGUxLTRlNTktOThmMC0yNjY5ODdhMzYwNGYiLCJpYXQiOjE0ODQ2OTcyNzUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.kju5uFpTtnL-heBTybtKEoEAUl9OnWcocAoJY_8cto8VZKVeuH4abUXNTsTUsF4qiiCFxw237HyolV_cVPfxKA"),
dataset = database,
type = "sql",
query = generalquery
)
Map <- leaflet(na.omit(data = Mapf)) %>%
#setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addCircles(lng = -98, lat = 39)
Map <- leaflet(data = Mapf) %>%
#setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addCircles(lng = -98, lat = 39)
Map
Map <- leaflet(data = Mapf) %>%
#setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addCircles(lng = long, lat = lat)
Map <- leaflet(data = Mapf) %>%
#setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addCircles(lng = Mapf$long, lat = Mapf$lat)
Map
Map <- leaflet(data = Mapf) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addCircles(lng = Mapf$long, lat = Mapf$lat)
Map
Map <- leaflet(data = Mapf) %>%
setView(lng = -98.35, lat = 39.5, zoom = 4) %>%
addTiles() %>%
addCircles(lng = Mapf$long, lat = Mapf$lat) %>%
addMarkers(lng = Mapf$long, lat = Mapf$lat)
Map
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
shiny::runApp('gitstuff/s17dvfinalproject-dvproject-4-katzen-lin-hollman/02Shiny')
